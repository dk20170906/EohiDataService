@{
    ViewBag.Title = "API定义编辑";
 
   Layout = "~/Areas/Admin/Views/Shared/_LayoutSimple.cshtml";

}

<div class="layui-fluid">

<form id="popupForm" action="@Url.Content("~/Admin/API/dataSave")" method="POST" enctype="multipart/form-data" >

   <input type="hidden" class="form-control" name="id" value= "@ViewBag.entity.id">
    <div class="layui-form-item">
        <label class="layui-form-label">API名称</label>
        <div class="layui-input-block">
            <input type="text" name="apiname"  id="apiname"  lay-verify="required" autocomplete="off" placeholder="这里输入Api名称" class="layui-input" value="@ViewBag.entity.apiname" />
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">API状态</label>
        <div class="layui-input-block">
            <input type="text" name="apistatus" id="apistatus"  autocomplete="off" placeholder="这里输入Api状态" class="layui-input" value="@ViewBag.entity.apistatus" />
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">API参数</label>
        <div class="layui-input-block">
            <input type="text" name="apipars" id="apipars"  autocomplete="off" placeholder="这里输入Api参数" class="layui-input" value="@ViewBag.entity.apipars" />
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">API说明</label>
        <div class="layui-input-block">
            <input type="text" name="apinote" id="apinote"  autocomplete="off" placeholder="" class="layui-input" value="@ViewBag.entity.apinote" />
        </div>
    </div>
    <div class="layui-form-item layui-form-text">
        <label class="layui-form-label">内容</label>
        <div class="layui-input-block">
            <textarea id="apiscript" name="apiscript">@ViewBag.entity.apiscript</textarea>
        </div>
    </div>

     <div class="layui-form-item layui-form-text" style="display:none;">
        <button type="submit" id="btn_datasave" class="btn baocun" >保存</button>
    </div>

    </form>

</div>



@section scripts{
     <style>
    .some-css {
      color: red;
      line-height: 2;
    }
  </style> 
  <link rel="stylesheet" href="~/Scripts/doc/docs.css" /> 
  <link rel="stylesheet" href="~/Scripts/lib/codemirror.css" /> 
  <link rel="stylesheet" href="~/Scripts/addon/fold/foldgutter.css" /> 
    
    
  <link rel="stylesheet" href="~/Scripts/theme/night.css" /> 
  <script src="~/Scripts/lib/codemirror.js"></script> 
  <script src="~/Scripts/addon/fold/foldcode.js"></script> 
  <script src="~/Scripts/addon/fold/foldgutter.js"></script> 
  <script src="~/Scripts/addon/fold/brace-fold.js"></script> 
  <script src="~/Scripts/addon/fold/xml-fold.js"></script> 
  <script src="~/Scripts/addon/fold/indent-fold.js"></script> 
  <script src="~/Scripts/addon/fold/markdown-fold.js"></script> 
  <script src="~/Scripts/addon/fold/comment-fold.js"></script> 
  <script src="~/Scripts/mode/javascript/javascript.js"></script> 
  <script src="~/Scripts/mode/xml/xml.js"></script> 
  <script src="~/Scripts/mode/css/css.js"></script> 
  <script src="~/Scripts/mode/htmlmixed/htmlmixed.js"></script> 
  <script src="~/Scripts/mode/python/python.js"></script> 
  <script src="~/Scripts/mode/markdown/markdown.js"></script> 
    <style type="text/css">
    .CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black;}
  </style> 
    <script type="text/javascript">
        var tejs = document.getElementById("apiscript");
     window.editorjs = CodeMirror.fromTextArea(tejs, {
         mode: "python",
         theme: "night",
    lineNumbers: true,
    lineWrapping: true,
    indentUnit: 4,
    indentWithTabs: true, 
    extraKeys: {"Ctrl-Q": function(cm){ cm.foldCode(cm.getCursor()); }},
    foldGutter: true,
    gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"]
  });

</script>


 <script type="text/javascript">
    var layer;
    layui.use(['form', 'layedit', 'jquery'], function () {
        var form = layui.form;
        var layer = layui.layer;
        var  layedit = layui.layedit;
        $ = layui.jquery;

        //表单提交;
        $("#popupForm").on("submit", function () {

            $(this).ajaxSubmit({
                success: function (data) { // data 保存提交后返回的数据，一般为 json 数据
                    if (data.access) {
                        var index = parent.layer.getFrameIndex(window.name);
                        parent.$("#iframe_handle_status").val('1');
                        parent.layer.close(index);
                    }
                    else {
                        //提示错误信息;
                        //modalConfirm(data.access, "");
                        //layerAlert(data.msg);
                        layer.msg("错误！[" + data.msg + "]", {
                            icon: 1,
                            time: 3000 //2秒关闭（如果不配置，默认是3秒）
                        }, function () { });
                    }
                },
                error: function (xhr, status, err) {
                    //alert("操作失败");
                    layer.msg("错误！[" + status + "][" + err + "]", {
                        icon: 1,
                        time: 3000 //2秒关闭（如果不配置，默认是3秒）
                    }, function () { });
                }
            });
            return false;
        });

        //
        window.DataSave = function () {

            //检验form对象;
            var result = Verification("#popupForm");
            if (result == false) {
                return;
            }

            if (!doCheck())
                return;

            //触发保存;
            $("#btn_datasave").trigger("click");
        }

        //检查
        window.doCheck=function() {
            var apiname = $("#apiname").val();
            if (apiname == undefined || apiname == "") {
                layerAlert("请填写API名称");
                return false;
            }
            var Apistatus = $("#apistatus").val();
            if (Apistatus == undefined || Apistatus == "") {
                layerAlert("请填写API状态");
                return false;
            }
            return true;
        }
    });
</script>
}