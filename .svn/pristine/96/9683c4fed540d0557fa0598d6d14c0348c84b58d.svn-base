using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

using System.Data;
using Newtonsoft.Json;
namespace WFServerWeb
{
    public class CInstanceManager
    {
        /// <summary>
        /// 将工作流实例设置为错误状态
        /// </summary>
        /// <param name="InstanceID"></param>
        /// <param name="ErrorMessage">错误状态信息</param>
        public static void SetInstanceError(string InstanceID, string ErrorMessage)
        {
            //设置审批状态为无效
            CApprovalManager.UpdateInstanceApprovalStatus(InstanceID, EApprovalStatus.Invalid);

            //设置实例状态为错误
            UpdateInstanceStatus(InstanceID, EInstanceStatus.Error);

            //记录出错信息
            UpdateInstanceMessage(InstanceID, ErrorMessage);
        }

        public static void UpdateInstanceStatus(string InstanceID, EInstanceStatus InsStu)
        {
            CDataHelper.ExecuteNonQuery("update " + CTableName.FlowChartInstance + " set [instance_status]='" + InsStu.ToString() + "' where instance_id='" + InstanceID + "'");
        }

        public static void UpdateInstanceMessage(string InstanceID, string ErrorMessage)
        {
            CDataHelper.ExecuteNonQuery("update " + CTableName.FlowChartInstance + " set [instance_message]='" + ErrorMessage + "' where instance_id='" + InstanceID + "'");
        }

        /// <summary>
        /// 将工作流实例的状态设置为Complete
        /// </summary>
        /// <param name="InstanceID"></param>
        public static void SetInstanceComplete(string InstanceID)
        {
            CApprovalManager.UpdateInstanceApprovalStatus(InstanceID, EApprovalStatus.Complete);
            UpdateInstanceStatus(InstanceID, EInstanceStatus.Complete);
        }

        /// <summary>
        /// 获取工作流实例的发起人ID
        /// </summary>
        /// <param name="InstanceID"></param>
        /// <returns></returns>
        public static string GetInstanceStartManID(string InstanceID) 
        { 
            return CDataHelper.GetData("select cre_man from " + CTableName.FlowChartInstance + " where instance_id='" + InstanceID + "'"); 
        }

        /// <summary>
        /// 获取流程实例的流转路径
        /// </summary>
        /// <param name="InstanceID"></param>
        /// <returns></returns>
        public static string GetInstanceFlowHistory(string InstanceID)
        {
            string strHistory = null;
            DataTable dtHistory = CDataHelper.GetDataTable("select node_id,next_node_id from " + CTableName.FlowChartHistory + " where instance_id='" + InstanceID + "' order by ID asc");
            if (dtHistory != null)
            {
                if (dtHistory.Rows.Count > 0)
                {
                    struWFJoin[] FlowHistory = new struWFJoin[dtHistory.Rows.Count];
                    for (int i = 0; i < dtHistory.Rows.Count; i++)
                    {
                        string NodeID = dtHistory.Rows[i]["node_id"].ToString();
                        string NextNodeID = dtHistory.Rows[i]["next_node_id"].ToString();
                        string SourcePoint = null;
                        string TargetPoint = null;
                        string Line = null;
                        DataTable dtLine = CDataHelper.GetDataTable("select top 1 sourcepoint,targetpoint,line_id from " + CTableName.FlowChartLine + " where node_id='" + NodeID + "' and next_node_id='" + NextNodeID + "'");
                        if (dtLine != null)
                        {
                            if (dtLine.Rows.Count > 0)
                            {
                                SourcePoint = dtLine.Rows[0]["sourcepoint"].ToString();
                                TargetPoint = dtLine.Rows[0]["targetpoint"].ToString();
                                Line = dtLine.Rows[0]["line_id"].ToString();
                            }
                        }
                        FlowHistory[i] = new struWFJoin(NodeID, NextNodeID, SourcePoint, TargetPoint, Line);
                    }
                    strHistory = JsonConvert.SerializeObject(FlowHistory);
                }
            }
            return strHistory;
        }

        /// <summary>
        /// 获取工作流实例
        /// </summary>
        /// <param name="strsql"></param>
        /// <returns></returns>
        public static string GetInstance(string strsql)
        {
            string strInstance = null;

            DataTable dtInstance = CDataHelper.GetDataTable(strsql);
            if (dtInstance != null)
            {
                if (dtInstance.Rows.Count > 0)
                {
                    struInstance[] struInst = new struInstance[dtInstance.Rows.Count];
                    for (int i = 0; i < dtInstance.Rows.Count; i++)
                    {
                        string FlowName = dtInstance.Rows[i]["flowchart_name"].ToString();
                        string FlowID = dtInstance.Rows[i]["flowchart_id"].ToString();
                        string FlowVersion = dtInstance.Rows[i]["flowchart_version"].ToString();
                        string InstanceID = dtInstance.Rows[i]["instance_id"].ToString();
                        string CreateDate = dtInstance.Rows[i]["cre_date"].ToString();
                        string CreateManName = dtInstance.Rows[i]["user_name"].ToString();
                        string CreateManID = dtInstance.Rows[i]["cre_man"].ToString();
                        string EInstanceStatus = dtInstance.Rows[i]["instance_status"].ToString();
                        string InstanceMessage = dtInstance.Rows[i]["instance_message"].ToString();
                        struInst[i] = new struInstance(FlowName, FlowID, FlowVersion, InstanceID, CreateDate, CreateManName, CreateManID, EInstanceStatus, InstanceMessage);
                    }
                    strInstance = JsonConvert.SerializeObject(struInst);
                }
            }
            return strInstance;
        }

        /// <summary>
        /// 记录新发起的工作流实例
        /// </summary>
        /// <param name="WFName">工作流名称</param>
        /// <param name="WFDataID">工作流实例对应的数据的ID</param>
        /// <param name="OpeManID">操作人</param>
        /// <param name="WFID">工作流ID</param>
        /// <param name="NewInstanceID">新工作流实例ID</param>
        public static void PutDownNewInstance(string WFName, string WFDataID, string OpeManID, string WFID, string NewInstanceID)
        {
            string WFVersion = CWFManager.GetLastVersion(WFName);
            if (WFVersion == null)
            {
                CInstanceManager.SetInstanceError(NewInstanceID, "缺少工作流版本号");
                return;
            }

            CDataHelper.ExecuteNonQuery("insert into " + CTableName.FlowChartInstance + "(flowchart_id,flowchart_version,instance_id,cre_date,cre_man,instance_status) values('" + WFID + "','" + WFVersion + "','" + NewInstanceID + "','" + DateTime.Now.ToString() + "','" + OpeManID + "','" + EInstanceStatus.Active.ToString() + "')");
            CDataHelper.ExecuteNonQuery("insert into " + CTableName.FlowChartPars + "(instance_id,keyvalue) values('" + NewInstanceID + "','" + WFDataID + "')");
        }
    }
}